<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ZiApi - Documentation</title><link href="/" rel="alternate"></link><link href="/feeds/documentation.atom.xml" rel="self"></link><id>/</id><updated>2019-01-25T18:34:00+01:00</updated><entry><title>ZiApi: Comment l'installer</title><link href="/ziapi-comment-linstaller.html" rel="alternate"></link><published>2019-01-25T18:34:00+01:00</published><updated>2019-01-25T18:34:00+01:00</updated><author><name>ZiApi</name></author><id>tag:None,2019-01-25:/ziapi-comment-linstaller.html</id><summary type="html">&lt;h1&gt;How to install ZiApi?&lt;/h1&gt;
&lt;p&gt;Comme ZiApi utilise uniquement des &lt;strong&gt;&lt;em&gt;fichiers HPP&lt;/em&gt;&lt;/strong&gt;, vous n'avez pas besoin d'installer quoique ce soit.&lt;br&gt;
Il vous suffit de télécharger les sources sur github: &lt;br&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/KillianG/ZiApi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Un fois que vous avez fait ça, il vous suffit d'include les fichiers .hpp dans …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;How to install ZiApi?&lt;/h1&gt;
&lt;p&gt;Comme ZiApi utilise uniquement des &lt;strong&gt;&lt;em&gt;fichiers HPP&lt;/em&gt;&lt;/strong&gt;, vous n'avez pas besoin d'installer quoique ce soit.&lt;br&gt;
Il vous suffit de télécharger les sources sur github: &lt;br&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/KillianG/ZiApi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Un fois que vous avez fait ça, il vous suffit d'include les fichiers .hpp dans vos class et c'est bon.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Avec CMake:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;target_include_directory([EXECUTABLE_NAME] PRIVATE ZiApi)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Avec G++:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;g++ [sources] -iquote ./ZiApi
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>ZiLogger: Comment l'utiliser ?</title><link href="/zilogger-comment-lutiliser.html" rel="alternate"></link><published>2019-01-25T18:34:00+01:00</published><updated>2019-01-25T18:34:00+01:00</updated><author><name>ZiApi</name></author><id>tag:None,2019-01-25:/zilogger-comment-lutiliser.html</id><summary type="html">&lt;h1&gt;ZiLogger&lt;/h1&gt;
&lt;h2&gt;Fonctionnement:&lt;/h2&gt;
&lt;p&gt;Afin de faciliter le débug de vos ZiA, nous avons mis en place un système de log.&lt;br&gt;
Notre logger fonctionne à l'aide de sévérité et de type d'erreur.&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;Sévérité:&lt;/h3&gt;
&lt;p&gt;La sévérité définie si votre log doit être afficher ou non. C'est un paramètre que vous choisissez au début …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;ZiLogger&lt;/h1&gt;
&lt;h2&gt;Fonctionnement:&lt;/h2&gt;
&lt;p&gt;Afin de faciliter le débug de vos ZiA, nous avons mis en place un système de log.&lt;br&gt;
Notre logger fonctionne à l'aide de sévérité et de type d'erreur.&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;Sévérité:&lt;/h3&gt;
&lt;p&gt;La sévérité définie si votre log doit être afficher ou non. C'est un paramètre que vous choisissez au début de votre Zia. La sévérité est définie comme suit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Severity&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;USELESS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;NORMAL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;IMPORTANT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;VITAL&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ainsi, si vous décider de n'afficher que les sévérités &lt;strong&gt;NORMAL&lt;/strong&gt; et supérieures, les log définis comme &lt;strong&gt;USELESS&lt;/strong&gt; ne s'afficheront pas. Les sévérités &lt;strong&gt;VITAL&lt;/strong&gt; ne peuvent pas être enlevées.&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;Type de log:&lt;/h3&gt;
&lt;p&gt;Le type de log défini, le balise qui se trouvera devant votre log.&lt;br&gt;
Les différents types sont définis comme suit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;FATAL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ABORT_MISSION&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Par exemple si l'on décide d'afficher un log de type &lt;strong&gt;ERROR&lt;/strong&gt;, la balise serait &lt;strong&gt;"[ERROR]:"&lt;/strong&gt;.&lt;br&gt;
Petite particularité pour &lt;strong&gt;ABORD_MISSION&lt;/strong&gt;, ce type de log exit votre ZIA, à n'utiliser qu'en cas d'erreur très importante.&lt;/p&gt;
&lt;h3&gt;Output:&lt;/h3&gt;
&lt;p&gt;Notre système de log vous permet de choisir l'output de chacun de vos log.&lt;br&gt;
Les outputs sont définis comme suit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="k"&gt;enum&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OutputStream&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;COUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;CERR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="kt"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Comme vous l'avez surement deviné, &lt;strong&gt;COUT&lt;/strong&gt; pour la sortie standard, &lt;strong&gt;CERR&lt;/strong&gt; pour la sortie d'erreur, et &lt;strong&gt;FILE&lt;/strong&gt; pour écrire dans un fichier.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Vous pouvez facilement changer le fichier dans lequel vous voulez que la sortie &lt;strong&gt;FILE&lt;/strong&gt; écrive en utilisant la fonction suivante:&lt;br&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kr"&gt;inline&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setStreamFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;filePath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./log.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Macro Log()&lt;/h3&gt;
&lt;p&gt;La macro &lt;strong&gt;Log()&lt;/strong&gt; permet d'afficher la ligne et le fichier duquel sort le log. Cette macro est définie comme suit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#define Log(logType) logType &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; &amp;quot;:&amp;quot; &amp;lt;&amp;lt; __LINE__ &amp;lt;&amp;lt; &amp;quot; : &amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Elle ne fonctione que sur un système unix.&lt;/p&gt;
&lt;h2&gt;Comment s'en servir&lt;/h2&gt;</content></entry></feed>